---

# - name: debug output
#   ansible.builtin.debug:
#     msg: "{{ memory |int }}"

- name: Import Information From JSON File
  ansible.builtin.set_fact:
    inventory: "{{ lookup('file', item) | from_json }}"
  with_fileglob: "/tmp/inventory_*.json"
  delegate_to: localhost

# - name: debug output
#   ansible.builtin.debug:
#     var: inventory

- name: Collect interface and vlan information on F5OS device
  f5networks.f5os.f5os_device_info:
    gather_subset:
      - tenant-images
      - vlans
  register: tenant_info

# - name: debug output
#   ansible.builtin.debug:
#     var: tenant_info

- name: Create VLANs From Old Confiruation
  f5networks.f5os.f5os_vlan:
    name: "vl{{ item.tag }}"
    vlan_id: "{{ item.tag }}"
  with_items: "{{ inventory.vlans }}"
  when: '"yes" in item.interfaces[0].tagged'

- name: Create VLANs List
  ansible.builtin.set_fact:
    vlan_list: "{{ vlan_list + [item.tag] }}"
  with_items: "{{ inventory.vlans }}"
  when: '"yes" in item.interfaces[0].tagged'

- name: Debug Output
  ansible.builtin.debug:
    var: vlan_list

- name: Create F5 Tenant
  f5networks.f5os.f5os_tenant:
    name: '{{ inventory.devices[0].hostname.split(".")[0] }}'
    image_name: "{{ tenant_info.tenant_images[0].name }}"
    nodes:
      - 1
    mgmt_ip: "{{ mgmt_ip }}"
    mgmt_prefix: "{{ mgmt_sn_cidr }}"
    mgmt_gateway: "{{ mgmt_gw }}"
    vlans: "{{ vlan_list }}"
    cpu_cores: "{{ cpu_cores }}"
    memory: "{{ memory | int }}"
    cryptos: enabled
    virtual_disk_size: "{{ disk_size | default('120') }}"
    running_state: configured

- name: Set Management-VLAN if Defined
  ansible.builtin.uri:
    url: >
      https://{{ ansible_host }}:8888/restconf/data/f5-tenants:tenants/tenant={{
      inventory.devices[0].hostname.split(".")[0] }}/config/f5-tenant-mgmt-vlan:mgmt-vlan
    method: PUT
    status_code:
      - 200
      - 201
      - 202
      - 204
    timeout: 300
    body_format: json
    headers:
      Content-Type: "application/yang-data+json"
    body:
      f5-tenant-mgmt-vlan:mgmt-vlan: "{{ mgmt_vlan }}"
    force_basic_auth: true
    user: "{{ ansible_user }}"
    password: "{{ ansible_password }}"
    validate_certs: false
  when: 
    - mgmt_vlan is defined
    - destination_platform is defined and destination_platform |lower == "velos"
  delegate_to: localhost
