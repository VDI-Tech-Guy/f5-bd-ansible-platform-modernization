---

- name: Pause for 5 Minutes
  ansible.builtin.pause:
    minutes: 5

# - name: Wait For Restore to Complete and system to become Active (15 Minutes of Retries)
#   f5networks.f5_bigip.bigip_command:
#     commands: show cm failover-status
#   register: f5_online
#   until:
#     - f5_online is defined
#     - "'stdout' in f5_online"
#     - f5_online.stdout is iterable and f5_online.stdout | length > 0
#     - >
#       ('ACTIVE' in f5_online.stdout[0] or 'STANDBY' in f5_online.stdout[0])
#     - >
#       ("'grey' in f5_online.stdout[0]" or "'green' in f5_online.stdout[0]")
#   retries: 30
#   delay: 30


- name: Wait For Restore to Complete and system to become Active or Standby (with retry workaround)
  block:
    - name: Run command with async to avoid persistent connection reuse
      f5networks.f5_bigip.bigip_command:
        commands: show cm failover-status
      register: f5_online
      async: 45
      poll: 0

    - name: Wait for async job to finish
      async_status:
        jid: "{{ f5_online.ansible_job_id }}"
      register: f5_async_result
      until:
        - f5_async_result.finished
        - "'stdout' in f5_async_result"
        - f5_async_result.stdout is iterable and f5_async_result.stdout | length > 0
        - >
          ('ACTIVE' in f5_async_result.stdout[0] or 'STANDBY' in f5_async_result.stdout[0])
        - >
          ("'grey' in f5_online.stdout[0]" or "'green' in f5_online.stdout[0]")
      retries: 30
      delay: 30
