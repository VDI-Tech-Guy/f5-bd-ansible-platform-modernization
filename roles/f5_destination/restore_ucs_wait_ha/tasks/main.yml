---

- name: Wait up to 15 minutes for F5 to reach ACTIVE or STANDBY state
  vars:
    retry_delay: 30
    max_retries: 30
  block:

    - name: Collect BIG-IP information
      f5networks.f5_bigip.bigip_device_info:
        gather_subset:
          - devices
      register: f5_online_status
      failed_when: false

    - name: Restart services if 503 returned
      ansible.builtin.shell: |
        bigstart restart restjavad
        bigstart restart restnoded
      when: >
        f5_online_status is failed
        or ('No start of json char found' in (f5_online_status.msg | default('')))
      delegate_to: "{{ inventory_hostname }}"
      vars:
        ansible_connection: network_cli   # use SSH instead of httpapi
      # noqa: command-instead-of-shell no-changed-when

    - name: Wait 60 seconds after restart
      ansible.builtin.pause:
        seconds: 60
      when:
        - f5_online_status.msg is defined
        - (f5_online_status.msg.code | default(0)) == 503

    - name: Check failover-status on F5 device
      f5networks.f5_bigip.bigip_command:
        commands: show cm failover-status
      register: f5_status_result
      failed_when: false
      delegate_to: "{{ inventory_hostname }}"
      vars:
        ansible_connection: httpapi  # or 'network_cli' if you're using SSH-based
      loop: "{{ range(0, max_retries) | list }}"
      loop_control:
        label: "Try #{{ item + 1 }}"
      until:
        - f5_status_result.stdout is defined
        - f5_status_result.stdout | length > 0
        - >
          ('ACTIVE' in f5_status_result.stdout[0] or 'STANDBY' in f5_status_result.stdout[0])
        - >
          ('gray' in f5_status_result.stdout[0] or 'green' in f5_status_result.stdout[0])
      delay: "{{ retry_delay }}"
      retries: 1
