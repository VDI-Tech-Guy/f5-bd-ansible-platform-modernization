---
- name: AS3 100s of Apps
  hosts: lb
  connection: httpapi
  gather_facts: false

  vars:
    ansible_httpapi_password: "{{ ansible_password }}"
    ansible_network_os: f5networks.f5_bigip.bigip
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: false
    ansible_httpapi_port: "{{ server_port }}"
    ansible_httpapi_use_proxy: false
    ansible_command_timeout: 300


  tasks:

    # # - name: Generate random IP addresses
    # - name: Generate random IP addresses
    #   set_fact:
    #     app_ips: "{{ app_ips | default([]) + ['10.0.' ~ (1 + (254 | random)) ~ '.' ~ (1 + (254 | random))] }}"
    #   loop: "{{ range(100) | list }}"

    - name: Setup provider
      ansible.builtin.set_fact:
        provider:
          server: "{{ ansible_host }}"
          user: "{{ ansible_user }}"
          password: "{{ ansible_password }}"
          server_port: "443"
          no_f5_teem: true
          validate_certs: false

    - name: Get Failover State - Module
      f5networks.f5_modules.bigip_command:
        commands: show sys failover
        provider: "{{ provider }}"
      connection: local
      register: f5_info

    - name: CREATE AS3 JSON BODY
      ansible.builtin.set_fact:
        as3_app_body: "{{ lookup('template', 'j2/multi-tenant.j2', split_lines=False) }}"
      when:
        - f5_info.stdout[0].split()[1] |lower == "active"

    - name: PUSH AS3 Template
      f5networks.f5_bigip.bigip_as3_deploy:
        content: "{{ lookup('template', 'j2/multi-tenant.j2', split_lines=False) }}"
      timeout: 360
      when:
        - f5_info.stdout[0].split()[1] |lower == "active"
